#!/bin/bash

check_input() {
  export skript_start_time="$(date +%T)"
  if [ $# -lt 3 ]; then
    echo "Wrong less than 3 arguments!"
    exit 1
  fi
  if [ $# -gt 3 ]; then
    echo "Wrong greater than 3 arguments!" 
    exit 1 
  fi
  if [ ${#1} -gt 7 ] || [ ${#1} -lt 1 ]; then
    echo "Wrong input parametr 1!" 
    exit 1 
  fi
  export name_file=$(echo $2 | cut -f1 -d.)
  export extension=$(echo $2 | cut -f2 -d.)
  if [ ${#name_file} -gt 7 ] || [ ${#extension} -gt 3 ] || [[ ! $2 =~ ^[a-zA-Z0-9]+[\.]{1}[a-zA-Z0-9]+$ ]] ; then
    echo "Wrong input parametr 2!" 
    exit 1 
  fi
  export number_p_3=${3%??}
  local len_number_p_3=$(( ${#3} - 2 ))
  local size_p_3=${3:$len_number_p_3:2}
  if [ $size_p_3 != "Mb" ] || [ $number_p_3 -lt 1 ] || [ $number_p_3 -gt 100 ]; then
    echo "Wrong input parametr 3!" 
    exit 1 
  fi
  export way=$(pwd)
  if [[ $way =~ \/s?bin\/ ]]; then
    echo "Stop script, because let contains bin or sbin"
    exit 1
  fi
  check_free_memory
  echo "Script run"
}

length_conversion() {
  # Приводим к длинне 5 символа имена файла и директории.
  export name_folder=$1
  for ((i=0; ${#name_folder} < 5; i++)); do
    copy_char_1="${name_folder:$i:1}"
    name_folder=${name_folder}${copy_char_1}
  done
  for ((i=0; ${#name_file} < 5; i++)); do
    copy_char_2="${name_file:$i:1}"
    export name_file=${name_file}${copy_char_2}
  done
}

generate_new_name_folder() {
  copy_char="${name_folder:$1:1}"
  name_folder=${name_folder}${copy_char}
}

generate_new_name_file() {
  copy_char="${name_file_for_cicle:$1:1}"
  name_file_for_cicle=${name_file_for_cicle}${copy_char}
}

check_free_memory() {
  availabel_memory="$(df -h / | awk 'NR==2 {print $4}')"
  if [[ $availabel_memory =~ ^[0-9]+(\.[0-9])?G{1}$ ]]; then
    availabel_memory=${availabel_memory%?}
    if (( $(echo "$availabel_memory <= 1.0" | bc -l) )); then
      echo "Stoped script because availabel memory is 1GB"
      exit 1; fi
  else 
    echo "Stoped script because availabel memory is 1GB"
    exit 1; fi
}

algoritm() {
    number_of_foldes=$(( $RANDOM % 100 + 1))
    for ((i=0; i < $number_of_foldes; i++)); do
      local command_new_folder=${way}/${name_folder}$(date +_%d%m%y)
      mkdir $command_new_folder
      generate_new_name_folder $i 
      export name_file_for_cicle=$name_file
      log_file $command_new_folder 
      number_of_file=$(( $RANDOM % 100 + 1))
      for ((j=0; j < $number_of_file; j++)); do
        local command_new_file=${command_new_folder}/${name_file_for_cicle}$(date +_%d%m%y).${extension}
        fallocate -l "$number_p_3"M $command_new_file 
        log_file $command_new_file $number_p_3
        check_free_memory
        generate_new_name_file $j 
      done
    done
  echo "Finish Script"
  print_time
}

log_file() {
  if [ -d file.log ]; then
    touch file.log
  fi
  if [ -z $2 ]; then
    echo "$1, $(date +%d.%m.%Y)" >> ./file.log
  else
    echo "$1, $(date +%d.%m.%Y), "$2"Mb" >> ./file.log
  fi
}

print_time() {
  skript_finish_time="$(date +%T)"
  echo "Script start time: $skript_start_time" | tee -a ./file.log
  echo "Script_finish_time: $skript_finish_time" | tee -a ./file.log
  skript_work_time=$SECONDS
  echo "Script execution time: $(($skript_work_time / 3600)):$(($skript_work_time%3600 / 60)):$(($skript_work_time % 60))" | tee -a ./file.log
}