#!/bin/bash

check_input() {
  if [ $# -lt 6 ]; then
    echo "Wrong less than 6 arguments!"
    exit 1
  fi
  if [ $# -gt 6 ]; then
    echo "Wrong greater than 6 arguments!" 
    exit 1 
  fi
  if [ ! -d $1 ]; then
    echo "No directory!" 
    exit 1 
  fi
  if [ $2 -lt 1 ] ; then
    echo "Wrong input parametr 2!" 
    exit 1 
  fi
  if [ ${#3} -gt 7 ] || [ ${#3} -lt 1 ]; then
    echo "Wrong input parametr 3!" 
    exit 1 
  fi
  if [ $4 -lt 1 ]; then
    echo "Wrong input parametr 4!" 
    exit 1 
  fi
  export name_file=$(echo $5 | cut -f1 -d.)
  export extension=$(echo $5 | cut -f2 -d.)
  if [ ${#name_file} -gt 7 ] || [ ${#extension} -gt 3 ] || [[ ! $5 =~ ^[a-zA-Z0-9]+[\.]{1}[a-zA-Z0-9]+$ ]] ; then
    echo "Wrong input parametr 5!" 
    exit 1 
  fi
  export number_p_6=${6%??}
  local len_number_p_6=$(( ${#6} - 2 ))
  local size_p_6=${6:$len_number_p_6:2}
  if [ $size_p_6 != "kb" ] || [ $number_p_6 -lt 1 ] || [ $number_p_6 -gt 100 ]; then
    echo "Wrong input parametr 6!" 
    exit 1 
  fi
  check_free_memory
  echo "Script is run"
}

length_conversion() {
  # Приводим к длинне 4 символа имена файла и директории.
  export name_folder=$3
  for ((i=0; ${#name_folder} < 4; i++)); do
    copy_char_1="${name_folder:$i:1}"
    name_folder=${name_folder}${copy_char_1}
  done
  for ((i=0; ${#name_file} < 4; i++)); do
    copy_char_2="${name_file:$i:1}"
    export name_file=${name_file}${copy_char_2}
  done
}

generate_new_name_folder() {
  copy_char="${name_folder:$1:1}"
  name_folder=${name_folder}${copy_char}
}

generate_new_name_file() {
  copy_char="${name_file_for_cicle:$1:1}"
  name_file_for_cicle=${name_file_for_cicle}${copy_char}
}

check_free_memory() {
  availabel_memory="$(df -a / | awk 'NR==2 {print $4}')"
  if [ $availabel_memory -le 1048576 ]; then
    echo "Stoped skript because availabel memory is 1GB"
    exit 1
  fi
}

algoritm() {
  for ((i=0, count=0; i < $2; i++, count++)); do
    local new_folder=${name_folder}$(date +_%d%m%y)
    if [ ${#new_folder} -gt 255 ]; then
      echo "Folder name is too long! Was created $count folder."
      break      
    else
      local command_new_folder=${1}${new_folder}
      mkdir $command_new_folder 
      generate_new_name_folder 
      export name_file_for_cicle=$name_file
      log_file $command_new_folder; fi
    for ((j=0, count1=0; j < $4; j++, count1++)); do
      local new_file=${name_file_for_cicle}$(date +_%d%m%y).${extension}
      if [ ${#new_file} -gt 255 ]; then 
        echo "File name is too long! Was created $count1 files."
        break
      else 
        local command_new_file=${command_new_folder}/${new_file}
        fallocate -l "$number_p_6"K $command_new_file 
        log_file $command_new_file $number_p_6
        check_free_memory
        generate_new_name_file $j; fi
    done
  done
  echo "Finish script"
}

log_file() {
  if [ -d file.log ]; then
    touch file.log
  fi
  if [ -z $2 ]; then
    echo "$1, $(date +%d.%m.%Y)" >> ./file.log
  else
    echo "$1, $(date +%d.%m.%Y), "$2"kb" >> ./file.log
  fi
}